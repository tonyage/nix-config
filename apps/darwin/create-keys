#!/usr/bin/env bash

setup_ssh_directory() {
	mkdir -p "${SSH_DIR}"
}

prompt_for_key_generation() {
	local key_name=$1
	if [[ -f "${SSH_DIR}/${key_name}" ]]; then
		_print "${RED}Existing SSH key found for ${key_name}.${NC}"
		cat "${SSH_DIR}/${key_name}.pub"
		read -rp "Do you want to replace it? (y/n) " -n 1
		if [[ $REPLY =~ ^[Yy]$ ]]; then
			return 0 # Indicate key should be replaced
		else
			return 1 # Indicate key should be kept
		fi
	fi
	return 0 # Indicate no key exists, so it should be created
}

generate_key() {
	local key_name=$1
	if prompt_for_key_generation "$key_name"; then
		ssh-keygen -t ed25519 -f "${SSH_DIR}/${key_name}" -N ""
		chown "${USER}":staff "${SSH_DIR}/${key_name}"{,.pub}
	else
		echo -e "${GREEN}Kept existing ${key_name}.${NC}"
	fi
}

setup_ssh_directory
generate_key "id_ed25519"
generate_key "id_ed25519_agenix"

echo -e "${GREEN}SSH key setup complete.${NC}"
echo -e "${GREEN}Remember to add the necessary keys to Github or other services as required.${NC}"
